/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { RigidBody } from "@react-three/rapier";

type GLTFResult = GLTF & {
  nodes: {
    Floor: THREE.Mesh;
    Wall: THREE.Mesh;
  };
  materials: {}; // eslint-disable-line @typescript-eslint/no-empty-object-type
};

export function Base(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/static/models/BaseV2.glb") as GLTFResult;
  return (
    <group {...props} dispose={null} position={[0, 0, 0]}>
      <RigidBody type="fixed">
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Floor.geometry}
          material={nodes.Floor.material}
        />
      </RigidBody>
      <RigidBody type="fixed" colliders="trimesh">
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wall.geometry}
          material={nodes.Wall.material}
        />
      </RigidBody>
    </group>
  );
}

useGLTF.preload("/static/models/BaseV2.glb");
